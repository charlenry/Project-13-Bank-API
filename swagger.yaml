swagger: "2.0"
info:
  title: "Bank Argent API documentation"
  description: "Contains all available API endpoints in this codebase"
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: "/api/v1"
schemes:
  - "http"
paths:
  /user/login:
    post:
      tags:
        - "User Module"
      summary: "Login"
      description: "API for Login"
      parameters:
        - in: "body"
          name: "body"
          description: "Login Payload"
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Login Successfully"
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: "Invalid Fields"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/signup:
    post:
      tags:
        - "User Module"
      summary: "Signup"
      description: "API for Signup"
      parameters:
        - in: "body"
          name: "body"
          description: "Signup Payload"
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Signup Successfully"
          schema:
            $ref: "#/definitions/ProfileResponse"
        "400":
          description: "Invalid Fields"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - "User Module"
      summary: "User Profile API"
      description: "API for fetching a user profile"
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Attach Bearer JWT token"
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        "200":
          description: "User profile retrieved successfully"
          schema:
            $ref: "#/definitions/ProfileResponse"
        "400":
          description: "Invalid Fields"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: "JWT expired"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      security:
        - Bearer: []
      tags:
        - "User Module"
      summary: "User Profile API"
      description: "API for updating a user profile"
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Attach Bearer JWT token"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Update user profile attributes"
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - "application/json"
      responses:
        "200":
          description: "User profile updated successfully"
          schema:
            $ref: "#/definitions/ProfileResponse"
        "400":
          description: "Invalid Fields"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: "JWT expired"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/transactions:
    post:
      security:
        - Bearer: []
      tags:
        - "Transactions Module"
      summary: "User Transactions API"
      description: "API for fetching a user transactions"
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Attach Bearer JWT token"
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Transactions retrieved successfully"
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "401":
          description: "JWT expired"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/transaction/category:
    put:
      security:
        - Bearer: []
      tags:
        - "Transactions Module"
      summary: "Transaction Category API"
      description: "API for updating a transaction category"
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Attach Bearer JWT token"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Update a user transaction attribute"
          required: true
          schema:
            $ref: "#/definitions/TransactionCategory"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Transaction category updated successfully"
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "401":
          description: "JWT expired"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/transaction/notes:
    put:
      security:
        - Bearer: []
      tags:
        - "Transactions Module"
      summary: "Transaction Notes API"
      description: "API for updating transaction notes"
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Attach Bearer JWT token"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Update a user transaction attribute"
          required: true
          schema:
            $ref: "#/definitions/TransactionNotes"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Transaction notes updated successfully"
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "401":
          description: "JWT expired"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    properties:
      email:
        type: "string"
        description: "user email"
      password:
        type: "string"
        description: "user password"
      firstName:
        type: "string"
        description: "user first name"
      lastName:
        type: "string"
        description: "user last name"
  Login:
    properties:
      email:
        type: "string"
        description: "user email"
      password:
        type: "string"
        description: "user password"
  ProfileResponse:
    type: "object"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
      body:
        type: "object"
        properties:
          email:
            type: "string"
          firstName:
            type: "string"
          lastName:
            type: "string"
          createdAt:
            type: "string"
          updatedAt:
            type: "string"
          id:
            type: "string"
  LoginResponse:
    type: "object"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
      body:
        type: "object"
        properties:
          token:
            type: "string"
  TransactionsResponse:
    type: "object"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
      body:
        type: "object"
        properties:
          account:
            type: "object"
            properties:
              accountId:
                type: "string"
              accountRef:
                type: "string"
              title:
                type: "string"
              description:
                type: "string"
              previousBalance:
                type: "number"
          transactions:
            type: "array"
            items:
              $ref: "#/definitions/Transactions"
  Transactions:
    type: "object"
    properties:
      transactionId:
        type: "integer"
      date:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      amount:
        type: "number"
      balance:
        type: "number"
      transactionType:
        type: "string"
      category:
        type: "string"
      notes:
        type: "string"
  TransactionCategory:
    type: "object"
    properties:
      category:
        type: "string"
  TransactionNotes:
    type: "object"
    properties:
      notes:
        type: "string"
  ErrorResponse:
    type: "object"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
  UserProfile:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
